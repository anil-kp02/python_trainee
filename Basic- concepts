# import numpy as np

# print("hiii")
# x = np.abs(-8.5)
# print(x)

# y = 10
     # data Types
# is_active= True
# count = 1000
# cgpa = 8.9
# name = "Anil \'Kumar Pradhan"
# print (len(name))
# print (name[2])
# print (name[2:9])
# print (name[1:])

# # / us eto escape sequence which helps to esacape thge imidiate symbol or letter
# # use f" {is_Active} {count}" // helps to format string or concatinate string 

# dist = "Puri "

# print (f"{name} {dist}")  # newer approach to format a string you can put any valid function inside your curly brashes 

# complex_number = 2+3j #2+3i similar to this 
# print(10/3)
# print(10//3)
# print(10**3)

# x = input("x :")
# # x = x +1
# int(x)
# float(x)
# # it explicitly covert the type of x 

# print (x)

# tempetature = 35 
# if tempetature >100:
#     print ("Drink water ")
# elif tempetature <100:
#     print ("Drink tea")
# else:
#     print ("Ganne ka Ras 10 Rupeya wala ")

# age = input("Eneter Age :")
# message = "Eligible" if  int(age) >18 else "Not Eligible"
# print (message)

# if(18<= int(age) <65):
#     print (" Good to Go ")

# for number in range(5):
#     print (" This is ",number)

# for x in range (1,5):
#      print (" This is ",x)
#      if x == 1 :
#         print ("Achieved Goal")
#         break  # come out from the loop 
     
# for x in "python":
#     print(x)

# comand = "" # Anything expect False , 0 ,"" trated as true 
# while comand:
#     print (" blank space treated as falsy value ")


# #function
# def greet():
#     print ("Wel come Dude ")


# greet()

# def greet(name):
#     print(f"welcome {name}")

# greet("Anil")

# def greet(name ,to="bbsr"):
#     return f"hii {name } from {to}"

# value = greet("Anil ",to="Puri") # here to is the key word argument for better understanding and undestanding 
# print (value)
# # all function return None if you dont return any thing 
# # we can also make para meter optional if you dont give any parameter then the default will automatically taken 
# #optional parameter must come after require parameter It show error 
# # def greet(name , to="bbsr",another): but its not //def greet(name another ,to="bbsr")

# print (greet("Manoranjan"))

#Oops in Python 
class Student():
    name = "Anonymous "   #these are call attributes here 
    age = 18
    college_name = "Tat"
    def __init__(self):  # defalut constructor
        print("This is the constructor Invoked and created Object and always take a para meter i.e 'self' , basically self refer to that perticular object whichn" \
        "is being created ", self)
    def __init__(self,name,sex): # parametrised constructor 
        self.name = name 
        self.sex = sex
    
    # every method inside a class also take a argument but static method dont we make static through @staticmethod
    # if you use self tehn the annoattion dont work at all
    @staticmethod
    def hello():
        print (" Method Invoked ")

    def get_age(self):
        return self.age
    def set_age(self,age):
        self.age = age 


# s1 = Student();
# # print (s1.name , s1.age)
# print (s1)
s2 = Student("Manoranjan","Male")
# print (s2.name, s2.sex)

# print (Student.college_name ,"or ", s2.college_name)
# this class attribute and it stored once as class attribute every instance are ginna access it 
# or we can access it through instance or class name 


Student.hello()
s2.set_age(age=22)
print (s2.get_age())

# to delete any object or it s attribute we can use del key word 
del s2.name
